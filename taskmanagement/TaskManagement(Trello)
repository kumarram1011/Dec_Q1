
Task management tool for Relevel

Problem Description:- 

Create a Django Project which manages the Task.it will contain User,Board,Task etc. Focus on Backend Design, Business logics and REST APIs .For reference please browse https://trello.com/ .  You need to sign up first for better understanding.

The candidate should ensure the availability of Git, Python and Django on their system as part of the setup exercise.. Preferred IDE is PyCharm to import the project directly. Postman tool to test the REST APIs and git.


Problem Breakdown 

To start the development a skeleton repo for the project is provided at the github link –
https://github.com/kumarram1011/Dec_Q1  (master branch)

Then repo can be cloned into their local system through HTTPs or SSH.  After cloning the project at your location, follow the below points:
	
Create Virtual env (ubuntu)
		1. sudo apt install python3-venv
		2. python3 -m venv relevel_env
		3. cd relevel_env/
		4. source bin/activate
Now quit this env location and jump to your working location/ Parent directory
	 
		
Install all dependencies using ‘pip install -r requirements.txt’
Now run your initial migrations with the command as:
	1. python manage.py makemigrations
	2. python manage.py migrate
	
	Note :- 
A.  Initially there is no any model in your projects so the 1st command  will give you the 
     response has "NO changes" but the 2nd command will configure you all initial
     settings like DB and all.
	B.  At every stage while developing/implementing the features please use both of the 
                 above commands to reflect your changes in the running/development server.

Run ‘python manage.py runserver’ to start the development server. 
The hosted app can be checked on http://localhost:8000 on the browser. 





Template 1 :
	
	Story 1.
	1. Create a User app/module to perform user related stuff.
	2. Inherit the Django "AbstractBaseUser" for your user model.
	3. Create a model "user" with basic details as :- First Name, Last Name , Email , Phone , 
                Password . You can add more if needed.
	4. Create an API for SignUp/Register the user with basic details as :- First Name, Last Name , 
                Email , Phone , Password .
	
	Story 2.
	1. Implement that User account will have 2 types as Prime and Gold.
	2. Create an API for Login using email and password.
	3. Create a model for the Board with necessary fields.
	4. Please keep it mind that the Board will contain multiple tasks for each user.
	5. One user can have multiple boards as Open,InProgress,Testing,ReOpen,Completed etc.





























Template 2 :
	
	Story 1.
	1. Create a User app/module to perform user related stuff.	
	3. Create a model "user" with basic details as :- First Name, Last Name , Email , Phone , 
                Password . You can add more if needed.
	3. Create a model for the Board with the necessary field.
	4. Please keep it mind that the Board will contain multiple tasks for each user.
	5. One user can have multiple boards as Open,InProgress,Testing,ReOpen,Completed etc.
	
	Story 2.
	1. Create the model for Task list with the field title,Descriptions,created_date,due_date
	2. Create an API to map these tasks with the respective board for the specified user.
	3. Create an API to fetch all boards with mapped tasks for the specified user.
	4. You can request user ID in params/payload





























Template 3 :
	
	Story 1.
	1. Create a User app/module to perform user related stuff.	
	2. Create a model "user" with basic details as :- First Name, Last Name , Email , Phone , 
                Password . You can add more if needed.

	3. No need to create a user registration/signup. You can create the record in DB as 
(
First Name:- Admin, 								
Last Name:- Test , 								
Email:- TestAdmin@gmail.com , 							 Phone:- *********** ,								
Password:- Admin@123
 ).

	4. Create an API for user login . After successful login response will contain the user basic 
    details and JWT in token key.
	5. Create a model for the Board with the necessary field.
	6. Please keep it mind that the Board will contain multiple tasks for each user.
	7. One user can have multiple boards as Open,InProgress,Testing,ReOpen,Completed etc.
	
	Story 2.
	1. Implement that User account will have 2 types as Prime and Gold.
	2. Prime users can create max 5 board and Gold user can create as much as they want.(Hint 
               You can use pre_save signals)
	3. For User reference use user id from user request. (Hint :- Token will be requested in API 
    call request header, in views class use  user=request.user/user=request.user.pk)
	4. Import Django permission class as --   from rest_framework.permissions import 
    IsAuthenticated and use in views as permission_classes = (IsAuthenticated,)
	5. Create the model for Task list with the field title,Descriptions,created_date,due_date
	



